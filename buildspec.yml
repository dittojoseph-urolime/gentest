version: 0.2

env:
  variables:
    AWS_REGION: us-east-2 # checkfor specific region
    AWS_ACCOUNT_ID: 857752673193
    IMAGE_NAME: nginx


phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - docker login -u dittojoseph -p 503ad87a-ce6c-4bf1-b47d-072fd2459252
      - REPOSITORY_URI=857752673193.dkr.ecr.us-east-2.amazonaws.com/nginx
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - #cat $CODEBUILD_SRC_DIR/src/gradle.properties| sed -n 's/systemProp\\.version=\\([0-9\\.]*\\)/\\1/p')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - docker image build -t $IMAGE_NAME .
      - docker image tag $IMAGE_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest
      - echo image name =  $IMAGE_NAME:latest
      - echo image url = $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest
      - echo Writing image definitions file...
      - printf '{"ImageURI":"'"$AWS_ACCOUNT_ID"'.dkr.ecr.'"$AWS_REGION"'.amazonaws.com/'"$IMAGE_NAME"':latest"}' > imageDetail.json
      - cat imageDetail.json
      - echo Build completed on `date`
artifacts:
  files: 
    - 'image*.json'
    - 'appspec.yaml'
    - 'taskdef.json'
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json
